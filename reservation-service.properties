server.port=${PORT:8000}
message=Hello Microservices!

# By default
# With "org.springframework.cloud:spring-cloud-starter-eureka" in the project's dependencies. (pom.xml, build.gradle)
# This application/service automatically looks for Eureka Server at "http://localhost:8761/eureka"
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# and register its instance as a Eureka Client.
eureka.client.register-with-eureka=true
# These 2 lines, in this case, is unnecessary.
# But remember to config them in case there are changes in URI 
# or further security configuration.

# Data Stream Bindings for Publisher
# The part before '.destination'("createReservation") must match the name of SubscribableChannel method
# Value must match publisher's value ("reservations")
spring.cloud.stream.bindings.createReservation.destination=reservations
# Only 1 node in group can receive message (point-to-point)
spring.cloud.stream.bindings.createReservation.group=reservations-group
# Make the messages queue durable
# Store and continue sending messages to the subscriber after it is re-active
spring.cloud.stream.bindings.createReservation.durableSubscription=true

